interface ParentClass {
    float addFloatValue(float a, float b);
    boolean invertBoolean(boolean value);
};

interface NormalClass {
    attribute long hiddenInt;
    attribute ReturnClass pointerReturnClass;
    [Value]attribute ReturnClass valueReturnClass;

    void NormalClass();
    void NormalClass(long c, [Ref]ParamClass refParamClass);

// Emscripten don't allow param by value
//    void NormalClass(ParamClass pointerParamClass, [Ref]ParamClass refParamClass, [Value]ParamClass valueParamClass);

//    void setString(DOMString text);
//    static DOMString addString(DOMString text);
//    [Value] static ReturnClass getStaticReturnValueClass(ParamClass paramClass);
    [Value]ReturnClass getReturnValueClass(ParamClass paramClass);

//    static long subIntValue(long a, long b, optional long subValue);
    long addIntValue(long a, long b);
//    [Ref]ReturnClass getReturnRefClass();
    [Value]ReturnClass getReturnValueObject();
//    ReturnClass getReturnPointerClass();
//    ReturnClass getReturnNullPointerClass();
    void refParam([Ref]ParamClass refParamOne, [Ref]ParamClass refParamTwo, [Ref]ParamClass refParamThree);
//    void pointerParam(ParamClass paramClass);

    // Emscripten don't allow param by value
//    void valueParam([Value]ParamClass paramClass);

//    void addIntArrayItems(long [] array);
};

interface ParamClass {
    void ParamClass();
};

interface ReturnClass {
    void ReturnClass();
};