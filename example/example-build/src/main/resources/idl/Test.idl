interface ParentClass {
    float addFloatValue(float a, float b);
    boolean invertBoolean(boolean value);
};

interface NormalClass {
    void NormalClass();
    void NormalClass(long c, [Ref]ParamClass refParamClass);
    void NormalClass(ParamClass pointerParamClass, [Ref]ParamClass refParamClass, [Value]ParamClass valueParamClass);

//    static DOMString addString(DOMString text);
    [Value] static ReturnClass getStaticReturnValueClass(ParamClass paramClass);
    [Value]ReturnClass getReturnValueClass(ParamClass paramClass);

    static long subIntValue(long a, long b, optional long subValue);
    long addIntValue(long a, long b);
    [Ref]ReturnClass getReturnRefClass();
    ReturnClass getReturnPointerClass();
    ReturnClass getReturnNullPointerClass();
    void refParam([Ref]ParamClass paramClass);
    void pointerParam(ParamClass paramClass);
    void valueParam([Value]ParamClass paramClass);
};
NormalClass implements ParentClass;

interface ParamClass {
    void ParamClass();
};

interface ReturnClass {
    void ReturnClass();
};