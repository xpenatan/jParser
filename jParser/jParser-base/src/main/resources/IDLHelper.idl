
interface IDLTemp {
    [BindTo="Bool_1"] static IDLBool Bool_1__0(boolean value);
    [BindTo="Bool_2"] static IDLBool Bool_2__0(boolean value);
    [BindTo="Bool_3"] static IDLBool Bool_3__0(boolean value);
    [BindTo="Bool_4"] static IDLBool Bool_4__0(boolean value);

    [BindTo="Int_1"] static IDLInt Int_1__0(long value);
    [BindTo="Int_2"] static IDLInt Int_2__0(long value);
    [BindTo="Int_3"] static IDLInt Int_3__0(long value);
    [BindTo="Int_4"] static IDLInt Int_4__0(long value);

    [BindTo="Long_1"] static IDLLong Long_1__0(long value);
    [BindTo="Long_2"] static IDLLong Long_2__0(long value);
    [BindTo="Long_3"] static IDLLong Long_3__0(long value);
    [BindTo="Long_4"] static IDLLong Long_4__0(long value);

    [BindTo="Float_1"] static IDLFloat Float_1__0(float value);
    [BindTo="Float_2"] static IDLFloat Float_2__0(float value);
    [BindTo="Float_3"] static IDLFloat Float_3__0(float value);
    [BindTo="Float_4"] static IDLFloat Float_4__0(float value);

    [BindTo="Double_1"] static IDLDouble Double_1__0(double value);
    [BindTo="Double_2"] static IDLDouble Double_2__0(double value);
    [BindTo="Double_3"] static IDLDouble Double_3__0(double value);
    [BindTo="Double_4"] static IDLDouble Double_4__0(double value);

    [BindTo="Int2_1"] static IDLInt2 Int2_1__0(long x, long y);
    [BindTo="Int2_2"] static IDLInt2 Int2_2__0(long x, long y);
    [BindTo="Int3_1"] static IDLInt3 Int3_1__0(long x, long y, long z);
    [BindTo="Int3_2"] static IDLInt3 Int3_2__0(long x, long y, long z);
    [BindTo="Int4_1"] static IDLInt4 Int4_1__0(long x, long y, long z, long w);
    [BindTo="Int4_2"] static IDLInt4 Int4_2__0(long x, long y, long z, long w);

    [BindTo="Long2_1"] static IDLLong2 Long2_1__0(long long x, long long y);
    [BindTo="Long2_2"] static IDLLong2 Long2_2__0(long long x, long long y);
    [BindTo="Long3_1"] static IDLLong3 Long3_1__0(long long x, long long y, long long z);
    [BindTo="Long3_2"] static IDLLong3 Long3_2__0(long long x, long long y, long long z);
    [BindTo="Long4_1"] static IDLLong4 Long4_1__0(long long x, long long y, long long z, long long w);
    [BindTo="Long4_2"] static IDLLong4 Long4_2__0(long long x, long long y, long long z, long long w);

    [BindTo="Float2_1"] static IDLFloat2 Float2_1__0(float x, float y);
    [BindTo="Float2_2"] static IDLFloat2 Float2_2__0(float x, float y);
    [BindTo="Float3_1"] static IDLFloat3 Float3_1__0(float x, float y, float z);
    [BindTo="Float3_2"] static IDLFloat3 Float3_2__0(float x, float y, float z);
    [BindTo="Float4_1"] static IDLFloat4 Float4_1__0(float x, float y, float z, float w);
    [BindTo="Float4_2"] static IDLFloat4 Float4_2__0(float x, float y, float z, float w);

    [BindTo="Double2_1"] static IDLDouble2 Double2_1__0(double x, double y);
    [BindTo="Double2_2"] static IDLDouble2 Double2_2__0(double x, double y);
    [BindTo="Double3_1"] static IDLDouble3 Double3_1__0(double x, double y, double z);
    [BindTo="Double3_2"] static IDLDouble3 Double3_2__0(double x, double y, double z);
    [BindTo="Double4_1"] static IDLDouble4 Double4_1__0(double x, double y, double z, double w);
    [BindTo="Double4_2"] static IDLDouble4 Double4_2__0(double x, double y, double z, double w);
};

[Prefix="IDL::", NoDelete]
interface IDLArray {
    void clear();
    long getSize();
    void resize(long size);
    any getVoidData();
};

interface IDLString {
    void IDLString();
    void clear();
    void append([Const] DOMString text);
    void append([Const] DOMString text, long size);
    long size();
    byte at(long index);
    [Const] DOMString data();
    [Const] DOMString c_str();
};

interface IDLStringView {
    void IDLStringView([Const] DOMString text);
    void IDLStringView([Const] DOMString text, long size);
    long size();
    byte at(long index);
    [Const] DOMString data();
};

interface IDLArrayBool {
    void IDLArrayBool(long size);
    boolean getValue(long index);
    void setValue(long index, boolean value);
    void copy([Ref] IDLArrayBool src, long srcOffset, long destOffset, long length);
};
IDLArrayBool implements IDLArray;

interface IDLArrayInt {
    void IDLArrayInt(long size);
    long getValue(long index);
    void setValue(long index, long value);
    void copy([Ref] IDLArrayInt src, long srcOffset, long destOffset, long length);
};
IDLArrayInt implements IDLArray;

interface IDLArrayLong {
    void IDLArrayLong(long size);
    long long getValue(long index);
    void setValue(long index, long long value);
    void copy([Ref] IDLArrayLong src, long srcOffset, long destOffset, long length);
};
IDLArrayLong implements IDLArray;

interface IDLArrayFloat {
    void IDLArrayFloat(long size);
    float getValue(long index);
    void setValue(long index, float value);
    void copy([Ref] IDLArrayFloat src, long srcOffset, long destOffset, long length);
};
IDLArrayFloat implements IDLArray;

interface IDLArrayDouble {
    void IDLArrayDouble(long size);
    double getValue(long index);
    void setValue(long index, double value);
    void copy([Ref] IDLArrayDouble src, long srcOffset, long destOffset, long length);
};
IDLArrayDouble implements IDLArray;

interface IDLArrayByte {
    void IDLArrayByte(long size);
    byte getValue(long index);
    void setValue(long index, byte value);
    void copy([Ref] IDLArrayByte src, long srcOffset, long destOffset, long length);
};
IDLArrayByte implements IDLArray;

interface IDLBool {
    void IDLBool();
    boolean getValue();
    void setValue(boolean value);
};
IDLBool implements IDLArrayBool;

interface IDLByte {
    void IDLByte();
    byte getValue();
    void setValue(byte value);
};
IDLByte implements IDLArrayByte;

interface IDLInt {
    void IDLInt();
    long getValue();
    void setValue(long value);
};
IDLInt implements IDLArrayInt;

interface IDLInt2 {
    void IDLInt2();
    void set(long x, long y);
    long getX();
    long getY();
};
IDLInt2 implements IDLArrayInt;

interface IDLInt3 {
    void IDLInt3();
    void set(long x, long y, long z);
    long getX();
    long getY();
    long getZ();
};
IDLInt3 implements IDLArrayInt;

interface IDLInt4 {
    void IDLInt4();
    void set(long x, long y, long z, long w);
    long getX();
    long getY();
    long getZ();
    long getW();
};
IDLInt4 implements IDLArrayInt;

interface IDLLong {
    void IDLLong();
    long long getValue();
    void setValue(long long value);
};
IDLLong implements IDLArrayLong;

interface IDLLong2 {
    void IDLLong2();
    void set(long long x, long long y);
    long long getX();
    long long getY();
};
IDLLong2 implements IDLArrayLong;

interface IDLLong3 {
    void IDLLong3();
    void set(long long x, long long y, long long z);
    long long getX();
    long long getY();
    long long getZ();
};
IDLLong3 implements IDLArrayLong;

interface IDLLong4 {
    void IDLLong4();
    void set(long long x, long long y, long long z, long long w);
    long long getX();
    long long getY();
    long long getZ();
    long long getW();
};
IDLLong4 implements IDLArrayLong;

interface IDLFloat {
    void IDLFloat();
    float getValue();
    void setValue(float value);
};
IDLFloat implements IDLArrayFloat;

interface IDLFloat2 {
    void IDLFloat2();
    void set(float x, float y);
    float getX();
    float getY();
};
IDLLong2 implements IDLArrayLong;

interface IDLFloat3 {
    void IDLFloat3();
    void set(float x, float y, float z);
    float getX();
    float getY();
    float getZ();
};
IDLLong3 implements IDLArrayLong;

interface IDLFloat4 {
    void IDLFloat4();
    void set(float x, float y, float z, float w);
    float getX();
    float getY();
    float getZ();
    float getW();
};
IDLLong4 implements IDLArrayLong;

interface IDLDouble {
    void IDLDouble();
    double getValue();
    void setValue(double value);
};
IDLDouble implements IDLArrayDouble;

interface IDLDouble2 {
    void IDLDouble2();
    void set(double x, double y);
    double getX();
    double getY();
};
IDLDouble2 implements IDLArrayDouble;

interface IDLDouble3 {
    void IDLDouble3();
    void set(double x, double y, double z);
    double getX();
    double getY();
    double getZ();
};
IDLDouble3 implements IDLArrayDouble;

interface IDLDouble4 {
    void IDLDouble4();
    void set(double x, double y, double z, double w);
    double getX();
    double getY();
    double getZ();
    double getW();
};
IDLDouble4 implements IDLArrayDouble;
